# handlers/chat_member.py
import logging
from aiogram import types
from bot import bot, router
from data import users_data, referral_data, credited_referrals, save_credited_referrals, stars_per_referral, \
    required_channels, captcha_passed_referrals
from utils import save_users_data, save_referral_data, get_stars_word
from handlers.keyboard_handler import get_main_keyboard
from handlers.subscription import check_subscription, get_not_subscribed_channels, get_channels_text


@router.my_chat_member()
async def on_my_chat_member(update: types.ChatMemberUpdated) -> None:
    if update.chat.type != "private":
        return
    user_id = str(update.chat.id)
    if update.new_chat_member.status in ["kicked", "left"]:
        if user_id in users_data:
            users_data[user_id]["status"] = "removed"
            save_users_data(users_data)
            logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–¥–∞–ª–∏–ª –±–æ—Ç–∞.")


@router.chat_member()
async def on_chat_member_update(update: types.ChatMemberUpdated) -> None:
    logging.info(f"=== –ù–ê–ß–ê–õ–û –û–ë–†–ê–ë–û–¢–ö–ò –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ü–û–î–ü–ò–°–ö–ò ===")
    logging.info(f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞: chat_id={update.chat.id}")
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {update.new_chat_member.user.id} ({update.new_chat_member.user.username})")
    logging.info(f"–°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å: {update.old_chat_member.status}, –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {update.new_chat_member.status}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫ –æ–¥–Ω–æ–º—É –∏–∑ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
    channel_id = str(update.chat.id)
    is_required_channel = any(channel.get('id') == channel_id for channel in required_channels)

    logging.info(f"–ö–∞–Ω–∞–ª {channel_id} —è–≤–ª—è–µ—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º: {is_required_channel}")

    if not is_required_channel:
        logging.info(f"–ü—Ä–æ–ø—É—Å–∫: chat_id –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –∫–∞–Ω–∞–ª–∞–º")
        return

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –∫–∞–Ω–∞–ª
    if update.new_chat_member.status in ["member", "administrator", "creator"] and \
            update.old_chat_member.status not in ["member", "administrator", "creator"]:

        user_id = str(update.new_chat_member.user.id)
        logging.info(f"=== –ü–û–î–ü–ò–°–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø {user_id} ===")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞
        if user_id in users_data:
            logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
            is_subscribed_to_all = await check_subscription(int(user_id))
            logging.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –¥–ª—è {user_id}: {is_subscribed_to_all}")

            # –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
            logging.info("=== –î–ê–ù–ù–´–ï –û –†–ï–§–ï–†–ê–õ–ê–• ===")
            for ref_id, ref_data in referral_data.items():
                logging.info(f"–†–µ—Ñ–µ—Ä–µ—Ä {ref_id}: {ref_data}")

            # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
            if is_subscribed_to_all:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–≤–µ–∑–¥—ã –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É
                stars_for_subscription_received = users_data[user_id].get("stars_for_subscription_received", False)
                logging.info(f"–°—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω–∏—è –∑–≤–µ–∑–¥ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É: {stars_for_subscription_received}")

                # –ï—Å–ª–∏ –µ—â–µ –Ω–µ –ø–æ–ª—É—á–∞–ª, –Ω–∞—á–∏—Å–ª—è–µ–º –∑–≤–µ–∑–¥—ã —Ç–æ–ª—å–∫–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É (–Ω–µ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞)
                if not stars_for_subscription_received:
                    users_data[user_id]["stars_for_subscription_received"] = True
                    save_users_data(users_data)
                    logging.info(f"–û—Ç–º–µ—á–µ–Ω–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ª—É—á–∏–ª –∑–≤–µ–∑–¥—ã –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É")

                    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ
                    logging.info(f"–ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ —Ä–µ—Ñ–µ—Ä—Ä–µ—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                    referrer_id = None

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª –ª–∏ —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω –∫–∞–∫ —Ä–µ—Ñ–µ—Ä–∞–ª –ø—Ä–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ –∫–∞–ø—á–∏
                    # –ï—Å–ª–∏ –¥–∞, —Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ
                    if user_id not in credited_referrals and user_id not in captcha_passed_referrals:
                        logging.info(
                            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –∑–∞—Å—á–∏—Ç–∞–Ω –∫–∞–∫ —Ä–µ—Ñ–µ—Ä–∞–ª —Ä–∞–Ω–µ–µ, –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ –∫–∞–ø—á–µ")

                        for potential_referrer_id, info in referral_data.items():
                            referral_activations = info.get("referral_activations", [])
                            logging.info(
                                f"–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Ñ–µ—Ä—Ä–µ—Ä–∞ {potential_referrer_id}, –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {referral_activations}")

                            if user_id in referral_activations:
                                referrer_id = potential_referrer_id
                                logging.info(f"–ù–∞–π–¥–µ–Ω —Ä–µ—Ñ–µ—Ä–µ—Ä {referrer_id} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                                break

                        if referrer_id:
                            logging.info(
                                f"–†–µ—Ñ–µ—Ä–µ—Ä –Ω–∞–π–¥–µ–Ω: {referrer_id}. –û—Ç–º–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ")

                            # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –∑–∞—Å—á–∏—Ç–∞–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
                            credited_referrals.add(user_id)
                            save_credited_referrals()
                            logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –∑–∞—Å—á–∏—Ç–∞–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ (–ø–æ–¥–ø–∏—Å–∫–∞)")

                            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
                            if referrer_id in referral_data:
                                referral_data[referrer_id]["count"] = referral_data[referrer_id].get("count", 0) + 1
                                logging.info(
                                    f"–£–≤–µ–ª–∏—á–µ–Ω —Å—á–µ—Ç—á–∏–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –¥–ª—è {referrer_id}: {referral_data[referrer_id]['count']}")
                            else:
                                referral_data[referrer_id] = {
                                    "bot_link": f"https://t.me/{(await bot.get_me()).username}?start={referrer_id}",
                                    "count": 1,
                                    "username": users_data.get(referrer_id, {}).get("username", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"),
                                    "referral_activations": []
                                }
                                logging.info(f"–°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –¥–ª—è {referrer_id}")

                            save_referral_data(referral_data)
                            logging.info(f"–î–∞–Ω–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")

                            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –∏–∑ config.json
                            from data import update_stars_per_referral
                            current_stars_per_referral = update_stars_per_referral()
                            logging.info(
                                f"–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–≤–µ–∑–¥ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –≤ chat_member: {current_stars_per_referral}")

                            # –ù–∞—á–∏—Å–ª—è–µ–º –∑–≤–µ–∑–¥—ã —Ä–µ—Ñ–µ—Ä–µ—Ä—É
                            if referrer_id in users_data:
                                current_stars = users_data[referrer_id].get("stars", 0)
                                users_data[referrer_id]["stars"] = current_stars + current_stars_per_referral
                                save_users_data(users_data)
                                logging.info(
                                    f"–ù–∞—á–∏—Å–ª–µ–Ω—ã –∑–≤–µ–∑–¥—ã —Ä–µ—Ñ–µ—Ä–µ—Ä—É {referrer_id}: {current_stars_per_referral}, –≤—Å–µ–≥–æ: {users_data[referrer_id]['stars']}")

                                # –û–ø–æ–≤–µ—â–∞–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
                                try:
                                    username = update.new_chat_member.user.username or update.new_chat_member.user.full_name
                                    await bot.send_message(
                                        int(referrer_id),
                                        f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username}, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏, –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã!\n\n"
                                        f"üí´ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ {current_stars_per_referral} {get_stars_word(current_stars_per_referral)}\n"
                                        f"üí´ –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {users_data[referrer_id]['stars']} {get_stars_word(users_data[referrer_id]['stars'])}"
                                    )
                                    logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä—É {referrer_id}")
                                except Exception as e:
                                    logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–µ—Ä—É {referrer_id}: {e}")
                        else:
                            logging.info(f"–†–µ—Ñ–µ—Ä–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    else:
                        logging.info(
                            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω –∫–∞–∫ —Ä–µ—Ñ–µ—Ä–∞–ª —Ä–∞–Ω–µ–µ (–ø—Ä–∏ –∫–∞–ø—á–µ), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É")

                    # –û–ø–æ–≤–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –ø–æ–¥–ø–∏—Å–∫–µ –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
                    try:
                        await bot.send_message(
                            int(user_id),
                            f"üåü <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã!</b>\n\n"
                            f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞!",
                            reply_markup=get_main_keyboard()
                        )
                        logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
                    except Exception as e:
                        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
                else:
                    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–∂–µ –ø–æ–ª—É—á–∞–ª –∑–≤–µ–∑–¥—ã –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É")
            else:
                # –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã, —Å–æ–æ–±—â–∞–µ–º –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ
                not_subscribed_channels = await get_not_subscribed_channels(int(user_id))

                if not_subscribed_channels:
                    channels_text = get_channels_text(not_subscribed_channels)

                    try:
                        await bot.send_message(
                            int(user_id),
                            f"üëç <b>–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!</b>\n\n"
                            f"–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã.\n\n"
                            f"{channels_text}"
                        )
                        logging.info(
                            f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ –∫–∞–Ω–∞–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
                    except Exception as e:
                        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        else:
            logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞")